shiny::runApp()
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
ui <- fluidPage(
leafletOutput("mymap"),
p(),
actionButton("recalc", "New points")
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ui <- page_fillable(theme = bs_theme(bootswatch = "minty")
)
install.packages("bslib")
library(bslib)
ui <- page_fillable(theme = bs_theme(bootswatch = "minty")
)
page_fillable(theme = bs_theme(bootswatch = "minty")
)
ui <- page_fillable(theme = bs_theme(bootswatch = "minty"),
layout_sidebar(fillable = TRUE,
sidebar(
varSelectInput("xvar", "X variable", df_num, selected = "Bill Length (mm)")
),
hr()
),
leafletOutput("map")
)
ui <- page_fillable(theme = bs_theme(bootswatch = "minty"),
layout_sidebar(fillable = TRUE,
sidebar(
varSelectInput("xvar", "X variable", c("coucou","bye bye"), selected = "Bill Length (mm)")
),
hr()
),
leafletOutput("map")
)
page_fillable(theme = bs_theme(bootswatch = "minty"),
layout_sidebar(fillable = TRUE,
sidebar(
varSelectInput("xvar", "X variable", c("coucou","bye bye"), selected = "Bill Length (mm)")
),
hr()
),
leafletOutput("map")
)
runApp()
runApp()
runApp()
ui <- page_fillable(theme = bs_theme(bootswatch = "minty"),
layout_sidebar(fillable = TRUE,
sidebar(
varSelectInput("xvar", "X variable", c("coucou","bye bye"), selected = "Bill Length (mm)"),
hr()
),
leafletOutput("map")
)
)
runApp()
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-ID)
runApp()
runApp()
leaflet(df_shp) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
setView(lng = 50, lat = 43, zoom = 2) %>%
addMarkers(~X, ~Y, label = df_shp$Name, popup = df_shp$Descr,clusterOptions = markerClusterOptions()) %>%
addProviderTiles(providers$Esri.NatGeoWorldMap)
runApp()
runApp()
runApp()
runApp()
runApp()
Project <-df_shp$Project
Project
unlist(strsplit(Project,","))
Project <-df_shp$Project %>%
unlist(strsplit(",")))
Project <-df_shp$Project %>%
unlist(strsplit(","))
Project <-df_shp$Project %>%
unlist(strsplit(.,","))
Project
Project <- unlist(strsplit(df_shp,","))
Project <- unlist(strsplit(df_shp$Project,","))
Project <- unlist(strsplit(df_shp$Project,",")) %>%
gsub(" ","",.)
runApp()
Project <- gsub(", ",",",df_shp$Project) %>%
unlist(strsplit(.,","))
Project <- gsub(", ",",",df_shp$Project)
Project <- unlist(strsplit(Project,","))
runApp()
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",unlist(strsplit(Project,",")))
Project
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",unique(unlist(strsplit(Project,","))))
Project
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
Project
ui <- bootstrapPage(
tags$style(type = "text/css", "html, body {width:100%;height:100%}"),
leafletOutput("map", width = "100%", height = "100%"),
absolutePanel(top = 10, right = 10,
selectInput("test","Select a project:",Project, selected = "All")
)
)
runApp()
df_shp
df_shp$Project
runApp()
runApp()
runApp()
runApp()
runApp()
View(df_shp)
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-ID)
View(df_shp)
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID, geometry))
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID, geometry))
df_shp
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID")
df_shp
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID, geometry))
df_shp
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID))
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
runApp()
runApp()
runApp()
shp_OFB<-read_sf("data/TWB_OFB.shp")
runApp()
runApp()
runApp()
df_shp$Descr
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
Description <- gsub(", ",",",df_shp$Project)
Description <- c("All",sort(unique(unlist(strsplit(Description,",")))))
Description
Description <- gsub(", ",",",df_shp$Descr)
Description <- c("All",sort(unique(unlist(strsplit(Description,",")))))
Description
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID))
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
Description <- gsub(", ",",",df_shp$Descr)
Description <- c("All",sort(unique(unlist(strsplit(Description,",")))))
Description
Description
Project
Interest <- gsub(", ",",",df_shp$Interest)
Interest <- c("All",sort(unique(unlist(strsplit(Interest,",")))))
Interest
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID))
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID))
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
read_sf("data/Sites_presentation_EN.shp")
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp<-read_sf("data/Sites_presentation_EN.shp")
read_sf("data/Sites_presentation_EN.shp")
runApp()
runApp()
runApp()
runApp()
runApp()
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_OFB<-read_sf("data/TWB_OFB.shp")
read_sf("data/Sites_presentation_EN.shp")
shiny::runApp()
runApp()
runApp('test')
runApp()
runApp('test')
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='oirysimon',
token='0459803C746D3F8F5032C1763F9AEB61',
secret='26WJ5WRIfl26W7kxrPFyPxgSnmXS7qoNDbVPVsSr')
rsconnect::deployApp()
runApp()
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID))
runApp()
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
shp<-read_sf("data/Sites_presentation_EN.shp") %>%
mutate(ID=c(1:nrow(.)))
shp_xy<-data.frame(st_coordinates(st_cast(shp$geometry,"POINT"))) %>%
mutate(ID=c(1:nrow(.)))
df_shp<-shp %>%
dplyr::select(-geometry) %>%
left_join(shp_xy, by="ID") %>%
dplyr::select(-c(ID))
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
Project
Project<-Project[-"NA"]
Project<-Project[-c("NA")]
Project<-Project[-which("NA")]
Project<-Project[-which(Project=="NA")]
Project
Project <- gsub(", ",",",df_shp$Project)
Project <- c("All",sort(unique(unlist(strsplit(Project,",")))))
Project
Project<-Project[-which(Project=="NA")]
runApp()
runApp()
runApp()
runApp()
runApp()
